@model FootballWebApp.Models.match

@{
    ViewBag.Title = "Edit Match";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
}

<h2>Edit Match</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>match</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.match_id)

        <div class="form-group">
            <div class="col-md-10">
                <label>Team 1</label>
                <input disabled type="text" class="form-control" value="@ViewBag.team1.team.name"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Team 2</label>
                <input disabled type="text" class="form-control" value="@ViewBag.team2.team.name" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text"
                       id="fp-date-time"
                       class="form-control flatpickr-date-time"
                       placeholder="YYYY-MM-DD HH:MM"
                       name="date"
                       />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })*@
                
                    @Html.RadioButtonFor(model => model.status, "Postponed", Model.status == "Postponed" ? "checked" : string.Empty) <span>Postponed</span> <br />
                    @Html.RadioButtonFor(model => model.status, "Not Started", Model.status == "Not Started" ? "checked" : string.Empty) <span>Not Started</span> <br />
                    @Html.RadioButtonFor(model => model.status, "Started", Model.status == "Started" ? "checked" : string.Empty) <span>Started</span> <br />
                    @Html.RadioButtonFor(model => model.status, "Finished", Model.status == "Finished" ? "checked" : string.Empty) <span>Finished</span> <br />
                    @Html.ValidationMessageFor(model => model.status, "Choose a status", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $("#fp-date-time").flatpickr({
            enableTime: true,
            dateFormat: "Y-m-d h:i K",
            defaultDate: "@Model.date"
        });

        $(document).ready(function () {
            $('select').on('change', function (event) {
                var prevValue = $(this).data('previous');
                $('select').not(this).find('option[value="' + prevValue + '"]').show();
                var value = $(this).val();
                $(this).data('previous', value);
                $('select').not(this).find('option[value="' + value + '"]').hide();
            });
        });

    </script>
}
